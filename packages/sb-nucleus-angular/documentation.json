{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-34693d856cf40579244cdd759a5b737752603e47e0c237507ddc350e2a33953d0753e13c4279a2ab9b1ec47987448d897fcf8d5a421c4fca19d32e51af80ae7c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'sb-nucleus-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'sb-nucleus-angular';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<nucleus-button buttontype=\"primary\">Primary</nucleus-button>\n<nucleus-button buttontype=\"callToAction\">CallToAction</nucleus-button>\n<nucleus-button buttontype=\"outline\">Outline</nucleus-button>\n<nucleus-button buttontype=\"text\">Text</nucleus-button>"
        },
        {
            "name": "NucleusButton",
            "id": "component-NucleusButton-ea555bf77a8077340f468fe160932e493c5ec9caeaf09664106b6294c189f318d19dc4f15b0c726922b857fc3489cb6806e8b78cd03f2f2cf04de42dc8a03fe0",
            "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/proxies.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [
                "buttontype"
            ],
            "outputs": [],
            "providers": [],
            "selector": "nucleus-button",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone } from '@angular/core';\n\nimport { ProxyCmp } from './angular-component-lib/utils';\n\nimport { Components } from 'nucleus';\n\n\n@ProxyCmp({\n  inputs: ['buttontype']\n})\n@Component({\n  selector: 'nucleus-button',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n  inputs: ['buttontype'],\n})\nexport class NucleusButton {\n  protected el: HTMLElement;\n  constructor(c: ChangeDetectorRef, r: ElementRef, protected z: NgZone) {\n    c.detach();\n    this.el = r.nativeElement;\n  }\n}\n\n\nexport declare interface NucleusButton extends Components.NucleusButton {}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "c",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "r",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "z",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "c",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "r",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "z",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "Components.NucleusButton"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-aae46319b40012965d0c1cd16dce53e3c72f3ffe2a0b4ea298a734cd5d07c3687584c4e83528ebdbf73f872a7ed732ee120134e265a9ba71ec141347262ef5ef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NucleusComponentLibraryModule } from 'nucleus-ng-component-library';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NucleusComponentLibraryModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NucleusComponentLibraryModule",
            "id": "module-NucleusComponentLibraryModule-4774e1c1fc81ca3d062ef5dc179a8b8255f1094f497a3e999370e997d461353a54872417c444591feabe0243d568f4ab7f4fcb3423dcc7f85cce2cb766b27b98",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library.module.ts",
            "methods": [],
            "sourceCode": "import { APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { DIRECTIVES } from './nucleus-ng-component-library';\nimport { defineCustomElements } from 'nucleus/loader';\n\nimport { NucleusButton } from './nucleus-ng-component-library/proxies';\n\nconst DECLARATIONS = [\n    NucleusButton\n];\n\n@NgModule({\n    declarations: [DECLARATIONS],\n    exports: [DECLARATIONS],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: () => defineCustomElements,\n            multi: true\n        },\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NucleusComponentLibraryModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NucleusButton"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NucleusButton"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "badgeArgtypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.args.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  label: {\n    description: 'Button Label',\n    defaultValue: 'Primary',\n    table: {\n      type: { summary: 'text' },\n      defaultValue: {\n        summary: 'Primary'\n      },\n    },\n    control: {\n      type: 'text'\n    }\n  },\n  buttontype: {\n    description: 'Button Type',\n    defaultValue: 'primary',\n    table: {\n      type: {\n        summary: 'text'\n      },\n      defaultValue: {\n        summary: 'primary'\n      },\n    },\n    control: 'select',\n    options: [\n      'primary',\n      'callToAction',\n      'outline',\n      'text'\n    ]\n  }\n}"
            },
            {
                "name": "callToAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='callToAction'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'CallToAction',\n}"
            },
            {
                "name": "DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    NucleusButton\n]"
            },
            {
                "name": "decorators",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  componentWrapperDecorator((story) => `<div class=\"nucleus-container\">${story}</div>`),\n]"
            },
            {
                "name": "defineCustomElement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(tagName: string, customElement: any) => {\n  if (customElement !== undefined && typeof customElements !== 'undefined' && !customElements.get(tagName)) {\n    customElements.define(tagName, customElement);\n  }\n}"
            },
            {
                "name": "DIRECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  d.NucleusButton\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='outline'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'Outline',\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    decorator: [\n      moduleMetadata({\n        providers: [],\n        imports: [CommonModule, NucleusComponentLibraryModule]\n      })\n    ],\n    viewMode: 'story',\n    docs: {\n      story: {\n        inline: true\n      }\n    },\n    direction: 'ltr',\n    backgrounds: { disable: true },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      [buttontype]=\"buttontype\">{{label}}\n    </nucleus-button>\n    `,\n  }),\n  name: 'Primary',\n  parameters: {\n    controls: {\n      expanded: true,\n    },\n  },\n  argTypes: {\n    ...badgeArgtypes,\n  },\n}"
            },
            {
                "name": "proxyInputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(Cmp: any, inputs: string[]) => {\n  const Prototype = Cmp.prototype;\n  inputs.forEach((item) => {\n    Object.defineProperty(Prototype, item, {\n      get() {\n        return this.el[item];\n      },\n      set(val: any) {\n        this.z.runOutsideAngular(() => (this.el[item] = val));\n      },\n      /**\n       * In the event that proxyInputs is called\n       * multiple times re-defining these inputs\n       * will cause an error to be thrown. As a result\n       * we set configurable: true to indicate these\n       * properties can be changed.\n       */\n      configurable: true,\n    });\n  });\n}"
            },
            {
                "name": "proxyMethods",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(Cmp: any, methods: string[]) => {\n  const Prototype = Cmp.prototype;\n  methods.forEach((methodName) => {\n    Prototype[methodName] = function () {\n      const args = arguments;\n      return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n    };\n  });\n}"
            },
            {
                "name": "proxyOutputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(instance: any, el: any, events: string[]) => {\n  events.forEach((eventName) => (instance[eventName] = fromEvent(el, eventName)));\n}"
            },
            {
                "name": "text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='text'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'Text',\n}"
            }
        ],
        "functions": [
            {
                "name": "ProxyCmp",
                "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "opts",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "opts",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/button/button.args.ts": [
                {
                    "name": "badgeArgtypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.args.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  label: {\n    description: 'Button Label',\n    defaultValue: 'Primary',\n    table: {\n      type: { summary: 'text' },\n      defaultValue: {\n        summary: 'Primary'\n      },\n    },\n    control: {\n      type: 'text'\n    }\n  },\n  buttontype: {\n    description: 'Button Type',\n    defaultValue: 'primary',\n    table: {\n      type: {\n        summary: 'text'\n      },\n      defaultValue: {\n        summary: 'primary'\n      },\n    },\n    control: 'select',\n    options: [\n      'primary',\n      'callToAction',\n      'outline',\n      'text'\n    ]\n  }\n}"
                }
            ],
            "src/stories/button/Button.stories.ts": [
                {
                    "name": "callToAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='callToAction'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'CallToAction',\n}"
                },
                {
                    "name": "outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='outline'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'Outline',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      [buttontype]=\"buttontype\">{{label}}\n    </nucleus-button>\n    `,\n  }),\n  name: 'Primary',\n  parameters: {\n    controls: {\n      expanded: true,\n    },\n  },\n  argTypes: {\n    ...badgeArgtypes,\n  },\n}"
                },
                {
                    "name": "text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n    <nucleus-button \n      buttontype='text'>button\n    </nucleus-button>\n    `,\n  }),\n  name: 'Text',\n}"
                }
            ],
            "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library.module.ts": [
                {
                    "name": "DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    NucleusButton\n]"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "decorators",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  componentWrapperDecorator((story) => `<div class=\"nucleus-container\">${story}</div>`),\n]"
                },
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    decorator: [\n      moduleMetadata({\n        providers: [],\n        imports: [CommonModule, NucleusComponentLibraryModule]\n      })\n    ],\n    viewMode: 'story',\n    docs: {\n      story: {\n        inline: true\n      }\n    },\n    direction: 'ltr',\n    backgrounds: { disable: true },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ],
            "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts": [
                {
                    "name": "defineCustomElement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(tagName: string, customElement: any) => {\n  if (customElement !== undefined && typeof customElements !== 'undefined' && !customElements.get(tagName)) {\n    customElements.define(tagName, customElement);\n  }\n}"
                },
                {
                    "name": "proxyInputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(Cmp: any, inputs: string[]) => {\n  const Prototype = Cmp.prototype;\n  inputs.forEach((item) => {\n    Object.defineProperty(Prototype, item, {\n      get() {\n        return this.el[item];\n      },\n      set(val: any) {\n        this.z.runOutsideAngular(() => (this.el[item] = val));\n      },\n      /**\n       * In the event that proxyInputs is called\n       * multiple times re-defining these inputs\n       * will cause an error to be thrown. As a result\n       * we set configurable: true to indicate these\n       * properties can be changed.\n       */\n      configurable: true,\n    });\n  });\n}"
                },
                {
                    "name": "proxyMethods",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(Cmp: any, methods: string[]) => {\n  const Prototype = Cmp.prototype;\n  methods.forEach((methodName) => {\n    Prototype[methodName] = function () {\n      const args = arguments;\n      return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n    };\n  });\n}"
                },
                {
                    "name": "proxyOutputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(instance: any, el: any, events: string[]) => {\n  events.forEach((eventName) => (instance[eventName] = fromEvent(el, eventName)));\n}"
                }
            ],
            "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/index.ts": [
                {
                    "name": "DIRECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  d.NucleusButton\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ]
        },
        "groupedFunctions": {
            "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts": [
                {
                    "name": "ProxyCmp",
                    "file": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "opts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decorators",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ProxyCmp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defineCustomElement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "proxyInputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "proxyMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/angular-component-lib/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "proxyOutputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "/Users/varad/Code/projects/playground_nx/design-system/packages/nucleus-angular/projects/nucleus-ng-component-library/src/lib/nucleus-ng-component-library/proxies.ts",
                "type": "component",
                "linktype": "component",
                "name": "NucleusButton",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "callToAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.args.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "badgeArgtypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}